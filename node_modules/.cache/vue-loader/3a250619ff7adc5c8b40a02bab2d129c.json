{"remainingRequest":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/src/components/Dashboard/ConsultasChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/src/components/Dashboard/ConsultasChart.vue","mtime":1682182228111},{"path":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diegogualim/Documents/PROYECTOS_GRADUACION/PROYECTO_OTTO/proyecto_frond/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConsultasChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"ConsultasChart.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-row cols=\"1\" cols-sm=\"2\" cols-md=\"2\" cols-lg=\"3\" cols-xl=\"3\">\n            <b-col>\n                <div class=\"small\">\n                    <line-chart v-if=\"datacollection\" :chart-data=\"datacollection\"></line-chart>\n                </div>\n            </b-col>\n            <b-col>\n                <bar-chart\n                    v-if=\"reconsultationsdatacollection\"\n                    :chart-data=\"reconsultationsdatacollection\"\n                ></bar-chart>\n            </b-col>\n            <b-col>\n                <bar-chart\n                    v-if=\"donationsdatacollection\"\n                    :chart-data=\"donationsdatacollection\"\n                ></bar-chart>\n            </b-col>\n        </b-row>\n        <b-row class=\"mt-5\" cols=\"1\" cols-sm=\"2\" cols-md=\"2\" cols-lg=\"3\" cols-xl=\"3\">\n            <b-col>\n                <line-chart\n                    v-if=\"patientsdatacollection\"\n                    :chart-data=\"patientsdatacollection\"\n                ></line-chart\n            ></b-col>\n            <b-col>\n                <line-chart v-if=\"dataFullcollection\" :chart-data=\"dataFullcollection\"></line-chart\n            ></b-col>\n        </b-row>\n        <!-- <b-button class=\"mt-4\" active variant=\"primary bg-success\" @click=\"update()\"\n      >Actualizar</b-button\n    > -->\n    </div>\n</template>\n\n<script>\nimport LineChart from './LineChart.js'\nimport BarChart from './BarChart.js'\nimport { requestHandler } from '@/helpers/requestHandler'\nimport { requestOptions } from '@/helpers/requestOptions'\n\nexport default {\n    components: {\n        LineChart,\n        BarChart\n    },\n    data() {\n        return {\n            datacollection: null,\n            consultations: null,\n            consultationsMap: null,\n            consultationsMapKey: [],\n            consultationsMapValue: [],\n            reconsultationsdatacollection: null,\n            reconsultations: null,\n            reconsultationsMap: null,\n            reconsultationsMapKey: [],\n            reconsultationsMapValue: [],\n            donationsdatacollection: null,\n            donations: null,\n            donationsMap: null,\n            donationsMapKey: [],\n            donationsMapValue: [],\n            donationsOptions: null,\n            patientsdatacollection: null,\n            patients: null,\n            patientsMap: null,\n            patientsMapKey: [],\n            patientsMapValue: [],\n            dataFullcollection: null,\n            patientsFullMapKey: [],\n            patientsFullMapValue: [],\n            donationsFullMapKey: [],\n            donationsFullMapValue: [],\n            patientsPrevYMapKey: [],\n            patientsPrevYMapValue: [],\n            patientsPrev2YMapKey: [],\n            patientsPrev2YMapValue: [],\n            dataPatientsFullcollection: null\n        }\n    },\n    async created() {\n        await this.update()\n    },\n    methods: {\n        fillData() {\n            this.datacollection = {\n                labels: [...this.consultationsMapKey],\n                datasets: [\n                    {\n                        label: 'Consultas',\n                        backgroundColor: '#254E58',\n                        data: [...this.consultationsMapValue],\n                        lineTension: 0.1\n                    }\n                ],\n                options: {\n                    aspectRatio: 5\n                }\n            }\n\n            this.reconsultationsdatacollection = {\n                labels: [...this.reconsultationsMapKey],\n                datasets: [\n                    {\n                        label: 'Re Consultas',\n                        backgroundColor: '#257E5F',\n                        data: [...this.reconsultationsMapValue],\n                        lineTension: 0.1\n                    }\n                ]\n            }\n\n            this.donationsdatacollection = {\n                labels: [...this.donationsMapKey],\n                datasets: [\n                    {\n                        label: 'Donaciones',\n                        backgroundColor: '#259E9A',\n                        data: [...this.donationsMapValue],\n                        lineTension: 0\n                    }\n                ],\n                options: {\n                    scales: {\n                        y: {\n                            min: 0,\n                            max: 10\n                        },\n                        x: {\n                            min: 0,\n                            max: 10\n                        }\n                    }\n                }\n            }\n\n            this.patientsdatacollection = {\n                labels: [...this.patientsMapKey],\n                datasets: [\n                    {\n                        label: 'Pacientes',\n                        backgroundColor: '#254E58',\n                        data: [...this.patientsMapValue],\n                        lineTension: 0.1\n                    }\n                ]\n            }\n\n            this.dataFullcollection = {\n                labels: [...this.consultationsMapKey],\n                datasets: [\n                    {\n                        label: 'Don',\n                        backgroundColor: '#259E9A',\n                        data: [...this.donationsFullMapValue],\n                        lineTension: 0\n                    },\n                    {\n                        label: 'Con',\n                        backgroundColor: '#254E58',\n                        data: [...this.consultationsMapValue],\n                        lineTension: 0\n                    },\n                    {\n                        label: 'Recon',\n                        backgroundColor: '#257E5F',\n                        data: [...this.patientsFullMapValue],\n                        lineTension: 0\n                    }\n                ],\n                options: {\n                    aspectRatio: 5\n                }\n            }\n\n            this.dataPatientsFullcollection = {\n                labels: [...this.patientsMapKey],\n                datasets: [\n                    {\n                        label: 'Don',\n                        backgroundColor: '#259E9A',\n                        data: [...this.patientsMapValue],\n                        lineTension: 0\n                    },\n                    {\n                        label: 'Con',\n                        backgroundColor: '#254E58',\n                        data: [...this.patientsPrevYMapValue],\n                        lineTension: 0\n                    },\n                    {\n                        label: 'Recon',\n                        backgroundColor: '#257E5F',\n                        data: [...this.patientsPrev2YMapValue],\n                        lineTension: 0\n                    }\n                ],\n                options: {\n                    aspectRatio: 5\n                }\n            }\n            /* \n      let rangeDatesMapped = rangeDates.map((e) => {\n        let json = new Object();\n        json[`${e.toLocaleDateString(\"en-GB\")}`] = 0;\n        return json;\n      });\n      let count = 0;\n      arrayData.forEach((e) => {\n        rangeDatesMapped.forEach((el) => {\n          if (Object.getOwnPropertyNames(el)[0] === e) {\n            el[e] = arrayValues[count];\n          }\n        });\n        count++;\n      }); */\n        },\n        async getConsultations() {\n            this.consultations = await requestHandler.async_fetch(\n                `${process.env.VUE_APP_BACKEND}/api/v1/consultations/consultation`,\n                requestOptions.get()\n            )\n            this.reconsultations = await requestHandler.async_fetch(\n                `${process.env.VUE_APP_BACKEND}/api/v1/consultations/reconsultation`,\n                requestOptions.get()\n            )\n            this.donations = await requestHandler.async_fetch(\n                `${process.env.VUE_APP_BACKEND}/api/v1/consultations/donation`,\n                requestOptions.get()\n            )\n            this.patients = await requestHandler.async_fetch(\n                `${process.env.VUE_APP_BACKEND}/api/v1/patients`,\n                requestOptions.get()\n            )\n        },\n        mapConsultations() {\n            console.log(this.consultations, 'CONSULTATIONS')\n            console.log(this.reconsultations, 'RECONSULTATIONS')\n            console.log(this.donations, 'DONATIONS')\n            this.consultationsMap = this.consultations.reduce(\n                (acc, e) => acc.set(e['date'], (acc.get(e['date']) || 0) + 1),\n                new Map()\n            )\n            this.reconsultationsMap = this.reconsultations.reduce(\n                (acc, e) => acc.set(e['date'], (acc.get(e['date']) || 0) + 1),\n                new Map()\n            )\n            this.donationsMap = this.donations.reduce(\n                (acc, e) => acc.set(e['date'], (acc.get(e['date']) || 0) + 1),\n                new Map()\n            )\n            this.patientsMap = this.patients.reduce(\n                (acc, e) => acc.set(e['date_created_at'], (acc.get(e['date_created_at']) || 0) + 1),\n                new Map()\n            )\n\n            console.info([...this.donationsMap.keys()], 'aiuda')\n            console.info([...this.consultationsMap.values()])\n            console.info([...this.consultationsMap.entries()])\n\n            Date.prototype.addDays = function(days) {\n                var date = new Date(this.valueOf())\n                date.setDate(date.getDate() + days)\n                return date\n            }\n\n            function getDates(startDate, stopDate) {\n                console.log(startDate, stopDate, 'tamo aquii')\n                var dateArray = new Array()\n                var currentDate = startDate\n                while (currentDate <= stopDate) {\n                    dateArray.push(new Date(currentDate))\n                    currentDate = currentDate.addDays(1)\n                }\n                return dateArray\n            }\n            const todays = new Date(Date.now())\n\n            let arrayData = [...this.consultationsMap.keys()]\n            let arrayValues = [...this.consultationsMap.values()]\n            console.log(arrayData, arrayValues, 'test', ...this.consultationsMap.values())\n            let initDateSplit = arrayData[0].split('/')\n            //let endDateSplit = arrayData[arrayData.length - 1].split(\"/\");\n            let rangeDates = getDates(\n                new Date(initDateSplit[2], initDateSplit[1] - 1, initDateSplit[0] - 5),\n                new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped = rangeDates.map((e) => {\n                let arraydata = new Array()\n                arraydata[0] = e.toLocaleDateString('en-GB')\n                arraydata[1] = 0\n                return arraydata\n            })\n            let count = 0\n            arrayData.forEach((e) => {\n                rangeDatesMapped.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues[count]\n                    }\n                })\n                count++\n            })\n\n            this.consultationsMapKey = rangeDatesMapped.map((e) => e[0])\n            this.consultationsMapValue = rangeDatesMapped.map((e) => e[1])\n\n            if ([...this.donationsMap.keys()].length !== 0) {\n                let arrayData2 = [...this.donationsMap.keys()]\n                let arrayValues2 = [...this.donationsMap.values()]\n                let initDateSplit2 = arrayData2[0].split('/')\n                //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n                let rangeDates2 = getDates(\n                    new Date(initDateSplit2[2], initDateSplit2[1] - 1, initDateSplit2[0] - 5),\n                    new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n                )\n\n                let rangeDatesMapped2 = rangeDates2.map((e) => {\n                    let arraydata2 = new Array()\n                    arraydata2[0] = e.toLocaleDateString('en-GB')\n                    arraydata2[1] = 0\n                    return arraydata2\n                })\n                let count2 = 0\n                arrayData2.forEach((e) => {\n                    rangeDatesMapped2.forEach((el) => {\n                        if (el[0] === e) {\n                            el[1] = arrayValues2[count2]\n                        }\n                    })\n                    count2++\n                })\n\n                this.donationsMapKey = rangeDatesMapped2.map((e) => e[0])\n                this.donationsMapValue = rangeDatesMapped2.map((e) => e[1])\n            }\n\n            //reconsultations\n\n            let arrayData3 = [...this.reconsultationsMap.keys()]\n            let arrayValues3 = [...this.reconsultationsMap.values()]\n            let initDateSplit3 = arrayData3[0].split('/')\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates3 = getDates(\n                new Date(initDateSplit3[2], initDateSplit3[1] - 1, initDateSplit3[0] - 5),\n                new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped3 = rangeDates3.map((e) => {\n                let arraydata3 = new Array()\n                arraydata3[0] = e.toLocaleDateString('en-GB')\n                arraydata3[1] = 0\n                return arraydata3\n            })\n            let count3 = 0\n            arrayData3.forEach((e) => {\n                rangeDatesMapped3.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues3[count3]\n                    }\n                })\n                count3++\n            })\n\n            this.reconsultationsMapKey = rangeDatesMapped3.map((e) => e[0])\n            this.reconsultationsMapValue = rangeDatesMapped3.map((e) => e[1])\n\n            //patients\n\n            let arrayData4 = [...this.patientsMap.keys()]\n            let arrayValues4 = [...this.patientsMap.values()]\n            let initDateSplit4 = arrayData4[0].split('/')\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates4 = getDates(\n                new Date(initDateSplit4[2], initDateSplit4[1] - 1, initDateSplit4[0] - 5),\n                new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped4 = rangeDates4.map((e) => {\n                let arraydata4 = new Array()\n                arraydata4[0] = e.toLocaleDateString('en-GB')\n                arraydata4[1] = 0\n                return arraydata4\n            })\n            let count4 = 0\n            arrayData4.forEach((e) => {\n                rangeDatesMapped4.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues4[count4]\n                    }\n                })\n                count4++\n            })\n\n            this.patientsMapKey = rangeDatesMapped4.map((e) => e[0])\n            this.patientsMapValue = rangeDatesMapped4.map((e) => e[1])\n\n            //all reconsultations\n\n            let arrayData5 = [...this.reconsultationsMap.keys()]\n            let arrayValues5 = [...this.reconsultationsMap.values()]\n            //let initDateSplit5 = arrayData5[0].split(\"/\");\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates5 = getDates(\n                new Date(initDateSplit[2], initDateSplit[1] - 1, initDateSplit[0] - 5),\n                new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped5 = rangeDates5.map((e) => {\n                let arraydata5 = new Array()\n                arraydata5[0] = e.toLocaleDateString('en-GB')\n                arraydata5[1] = 0\n                return arraydata5\n            })\n            let count5 = 0\n            arrayData5.forEach((e) => {\n                rangeDatesMapped5.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues5[count5]\n                    }\n                })\n                count5++\n            })\n            this.patientsFullMapKey = rangeDatesMapped5.map((e) => e[0])\n            this.patientsFullMapValue = rangeDatesMapped5.map((e) => e[1])\n\n            //all donations\n\n            let arrayData6 = [...this.donationsMap.keys()]\n            let arrayValues6 = [...this.donationsMap.values()]\n            //let initDateSplit5 = arrayData5[0].split(\"/\");\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates6 = getDates(\n                new Date(initDateSplit[2], initDateSplit[1] - 1, initDateSplit[0] - 5),\n                new Date(todays.getFullYear(), todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped6 = rangeDates6.map((e) => {\n                let arraydata6 = new Array()\n                arraydata6[0] = e.toLocaleDateString('en-GB')\n                arraydata6[1] = 0\n                return arraydata6\n            })\n            let count6 = 0\n            arrayData6.forEach((e) => {\n                rangeDatesMapped6.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues6[count6]\n                    }\n                })\n                count6++\n            })\n            this.donationsFullMapKey = rangeDatesMapped6.map((e) => e[0])\n            this.donationsFullMapValue = rangeDatesMapped6.map((e) => e[1])\n\n            //patients previous year\n\n            let arrayData7 = [...this.patientsMap.keys()]\n            let arrayValues7 = [...this.patientsMap.values()]\n            let initDateSplit7 = arrayData7[0].split('/')\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates7 = getDates(\n                new Date(initDateSplit7[2], initDateSplit7[1] - 1, initDateSplit7[0] - 5),\n                new Date(todays.getFullYear() - 1, todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped7 = rangeDates7.map((e) => {\n                let arraydata7 = new Array()\n                arraydata7[0] = e.toLocaleDateString('en-GB')\n                arraydata7[1] = 0\n                return arraydata7\n            })\n            let count7 = 0\n            arrayData7.forEach((e) => {\n                rangeDatesMapped7.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues7[count7]\n                    }\n                })\n                count7++\n            })\n\n            this.patientsPrevYMapKey = rangeDatesMapped7.map((e) => e[0])\n            this.patientsPrevYMapValue = rangeDatesMapped7.map((e) => e[1])\n\n            //patients previous 2 year\n\n            let arrayData8 = [...this.patientsMap.keys()]\n            let arrayValues8 = [...this.patientsMap.values()]\n            let initDateSplit8 = arrayData8[0].split('/')\n            //let endDateSplit2 = arrayData2[arrayData2.length - 1].split(\"/\");\n            let rangeDates8 = getDates(\n                new Date(initDateSplit8[2], initDateSplit8[1] - 1, initDateSplit8[0] - 5),\n                new Date(todays.getFullYear() - 2, todays.getMonth(), todays.getDate())\n            )\n\n            let rangeDatesMapped8 = rangeDates8.map((e) => {\n                let arraydata8 = new Array()\n                arraydata8[0] = e.toLocaleDateString('en-GB')\n                arraydata8[1] = 0\n                return arraydata8\n            })\n            let count8 = 0\n            arrayData8.forEach((e) => {\n                rangeDatesMapped8.forEach((el) => {\n                    if (el[0] === e) {\n                        el[1] = arrayValues8[count8]\n                    }\n                })\n                count8++\n            })\n\n            this.patientsPrev2YMapKey = rangeDatesMapped8.map((e) => e[0])\n            this.patientsPrev2YMapValue = rangeDatesMapped8.map((e) => e[1])\n            console.log(this.consultationsMapValue, 'valor')\n        },\n        async update() {\n            await this.getConsultations()\n            this.mapConsultations()\n            this.fillData()\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.small {\n    max-width: 600px;\n}\n</style>\n"]}]}